----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    19:14:03 04/26/2016 
-- Design Name: 
-- Module Name:    MISR - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity MISR is
    Port ( Clk : in  STD_LOGIC;
           Reset : in  STD_LOGIC;
           DataIn : in  STD_LOGIC_VECTOR (7 downto 0);
			  TestMode : in STD_LOGIC;
           Signature : out  STD_LOGIC_VECTOR (7 downto 0));
end MISR;

architecture Behavioral of MISR is
	--Components
	Component DFlipFlop is	--D Flip Flop component 
		port(	Data,Clk,Reset   : IN STD_LOGIC;
			Q			  		  : OUT STD_LOGIC);
	end component;
	
	Component XORgate is		--XOR gate component 
		Port ( X : in  STD_LOGIC;
				 Y : in  STD_LOGIC;
             Z : out  STD_LOGIC);
	end component;
	
	Component Multiplexer2to1_1bit is--MUX
    Port ( Input1 : in  STD_LOGIC;
           Input2 : in  STD_LOGIC;
           Sel : in  STD_LOGIC;--1 bit select
           Output : out  STD_LOGIC);
	 end component;
	
	--Signals
	
	Signal W0,W1,W2,W3,W4,W5,W6,W7,W8,W9,W10,W11,W12,W13,W14,W15,W16,W17,W18,W19,W20,W21,W22,W23,W24: STD_LOGIC;
	signal select_signal : STD_LOGIC := '0';--Intialize so that the MUX ouput the flowing signal
begin
    
	--Eight total D Flip Flops
		DFF1: DFlipFlop
			port map (W1,clk,Reset,W0);
		DFF2: DFlipFlop
			port map (W4,clk,Reset,W3);
		DFF3: DFlipFlop
			port map (W7,clk,Reset,W6);
		DFF4: DFlipFlop
			port map (W10,clk,Reset,W9);
		DFF5: DFlipFlop
			port map (W13,clk,Reset,W12);
		DFF6: DFlipFlop
			port map (W16,clk,Reset,W15);
		DFF7: DFlipFlop
			port map (W19,clk,Reset,W18);
		DFF8: DFlipFlop
			port map (W22,clk,Reset,W21);
			
	--Eight 2-1 MUX's of 1 bit
		M1: Multiplexer2to1_1bit
			port map (W0,W2,TestMode,W1);
		M2: Multiplexer2to1_1bit
			port map (W3,W5,TestMode,W4);
		M3: Multiplexer2to1_1bit
			port map (W6,W8,TestMode,W7);
		M4: Multiplexer2to1_1bit
			port map (W9,W11,TestMode,W10);
		M5: Multiplexer2to1_1bit
			port map (W12,W14,TestMode,W13);
		M6: Multiplexer2to1_1bit
			port map (W15,W17,TestMode,W16);
		M7: Multiplexer2to1_1bit
			port map (W18,W20,TestMode,W19);
		M8: Multiplexer2to1_1bit
			port map (W23,W21,TestMode,W22);
			
			
			
	--Nine XOR(2) Gates
		XORgate1: XORgate
			port map (W3,DataIn(0),W2);
		XORgate2: XORgate
			port map (W6,DataIn(1),W5);
		XORgate3: XORgate
			port map (W9,DataIn(2),W8);
		XORgate4: XORgate
			port map (W12,DataIn(3),W11);
		XORgate5: XORgate
			port map (W15,DataIn(4),W14);
		XORgate6: XORgate
			port map (W18,DataIn(5),W17);
		XORgate7: XORgate
			port map (W21,DataIn(6),W20);
		XORgate8: XORgate
			port map (W24,DataIn(7),W23);
		XORgate9: XORgate
			port map (W0,W21,W24);

	
	MISRProcess: process (Clk)
		variable counter : integer := 0;--count variable for when to hold signature
	begin 
		if (Clk'event and clk = '1') then 
			if TestMode = '1' then
				if counter <= 10 then--Wait 10 clock cycles
					Signature <= "00000000";--just give out zeros
				elsif counter < 110 then --good data
					Signature <= W21 & W18 & W15 & W12 & W9 & W6 & W3 & W0;
				else  --hold the signature 
					select_signal <= '1';--Start recyclying DFlipFlop signals
					Signature <= W21 & W18 & W15 & W12 & W9 & W6 & W3 & W0;
				end if;
			else --not in test mode
				Signature <= "00000000"; 
			end if; 
		else --Not rising edge, hold values
			Signature <= Signature;
			slecet_signal <= slecet_signal;
			counter := counter;
		end if;
	end process MISRProcess;
	--Output
	
end Behavioral;

